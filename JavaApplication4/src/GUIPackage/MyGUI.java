/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MyGUI.java
 *
 * Created on Nov 1, 2010, 11:33:31 AM
 */

package GUIPackage;


import javax.swing.*;
import java.awt.*;
import java.awt.image.*; //Buffered Image
import java.util.*;
import java.io.File;
import java.io.*;

import javax.imageio.ImageIO; //imageio
import sun.java2d.pipe.DrawImage;
/**
 *
 * @author senatori
 */
public class MyGUI extends javax.swing.JFrame {

    /** Creates new form MyGUI */
    public MyGUI()
    {
        initComponents();
    }



     

    //mypic testx= new mypic();
    mypic card0= new mypic(); boolean bcard0;
    mypic card1= new mypic(); boolean bcard1;
    mypic card2= new mypic(); boolean bcard2;
    mypic card3= new mypic(); boolean bcard3;
    mypic card4= new mypic(); boolean bcard4;

    //mypic[] card= new mypic[5];



    VideoPoker game= new VideoPoker();

    int counter=0;








  
    @Override
    public void paint(Graphics g)
    {
        //draw a rectangle starting at 100,100 width a width and height of 80
        //g.drawRect(100, 100, 80, 80);
        //g.fillRect(100, 100, 80, 80);
        //g.setColor(Color.red);
        //g.drawImage(testx.img, 250, 250, rootPane);
        g.drawImage(card0.img, 80, 80, rootPane);
        g.drawImage(card1.img, 160, 80, rootPane);
        g.drawImage(card2.img, 240, 80, rootPane);
        g.drawImage(card3.img, 320, 80, rootPane);
        g.drawImage(card4.img, 400, 80, rootPane);

        //repaint ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jButton1.setText("Deal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("5");

        jLabel1.setText("Bet Amount:");

        jTextField2.setText("100");

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField3.setText("Click Deal to Start");

        jLabel2.setText("Game Status:");

        jLabel3.setText("Balance:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(155, 155, 155)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(228, Short.MAX_VALUE)
                            .addComponent(jButton1)
                            .addGap(65, 65, 65)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(194, 194, 194))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(187, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //jCheckBox1.setSelected(true);
        int i;
        int n;
        int temp;
        int tmp;

        //card1.newpic("Card0jCk.png");
        //jCheckBox1.setSelected(true);
        //bcard1= jCheckBox1.isSelected();
        //jCheckBox1.updateUI();
        //repaint();
        if(counter== 0)
        {
             //FOR SOME REASON, I get RUNTIME ERRORS WHEN I ATTEMPT TO USE ARRAY
            //THUS, NO FOR Loop. Had to do all this by hand :(

            game.resetHand();
            

            bcard0= false;
            bcard1= false;
            bcard2= false;
            bcard3= false;
            bcard4= false;

            jTextField1.setText("5");

            jTextField3.setText("Click Cards To Replace");

            card0.Suite= game.getHandSuite(0);
            card0.Rank= game.getRankValue(0);
            card0.setDir();
            card1.Suite= game.getHandSuite(1);
            card1.Rank= game.getRankValue(1);
            card1.setDir();
            card2.Suite= game.getHandSuite(2);
            card2.Rank= game.getRankValue(2);
            card2.setDir();
            card3.Suite= game.getHandSuite(3);
            card3.Rank= game.getRankValue(3);
            card3.setDir();
            card4.Suite= game.getHandSuite(4);
            card4.Rank= game.getRankValue(4);
            card4.setDir();
            
            counter=1;
        }
        else if(counter==1)
        {
            if(bcard0)
            {
                game.replaceCard(0);
                card0.Suite= game.getHandSuite(0);
                card0.Rank= game.getRankValue(0);
                card0.setDir();
                //jCheckBox1.setSelected(false);
            }
            if(bcard1)
            {
                game.replaceCard(1);
                card1.Suite= game.getHandSuite(1);
                card1.Rank= game.getRankValue(1);
                card1.setDir();
                //jCheckBox2.setSelected(false);

            }
            if(bcard2)
            {
                game.replaceCard(2);
                card2.Suite= game.getHandSuite(2);
                card2.Rank= game.getRankValue(2);
                card2.setDir();
                //jCheckBox3.setSelected(false);

            }
            if(bcard3)
            {
                game.replaceCard(3);
                card3.Suite= game.getHandSuite(3);
                card3.Rank= game.getRankValue(3);
                card3.setDir();
                //jCheckBox4.setSelected(false);
            }
            if(bcard4)
            {
                game.replaceCard(4);
                card4.Suite= game.getHandSuite(4);
                card4.Rank= game.getRankValue(4);
                card4.setDir();
                //jCheckBox5.setSelected(false);
            }

            jTextField1.getText();
            tmp=Integer.parseInt(jTextField1.getText());
            game.setBet(tmp);
            temp= game.checkHands();
            tmp= game.getBalance();
            jTextField2.setText(Integer.toString(tmp));
            jTextField3.setText(game.getHandScore(temp));
            //jTextField2.setText(null)

            counter=0;
        }


//        card1= card[0];
//        card2= card[1];
//        card3= card[2];
//        card4= card[3];
//        card5= card[4];





        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        //59 x 85
        int x; int y;
        x= evt.getX();
        y= evt.getY();
        
//        g.drawImage(card0.img, 80, 80, rootPane);
//        g.drawImage(card1.img, 160, 80, rootPane);
//        g.drawImage(card2.img, 240, 80, rootPane);
//        g.drawImage(card3.img, 320, 80, rootPane);
//        g.drawImage(card4.img, 400, 80, rootPane);

        if(counter==1)
        {
            if(((x >= 80)&& (x <= (59+80)))&& ((y >= 80)&& (y <= (85+80))) )
            {
                if(!bcard0)//select card to replace
                {
                    bcard0=true;
                    card0.newpic("Back05v4.png");
                    repaint();
                }
                else if(bcard0)//unselects (incase user changes their mind)
                {
                    bcard0= false;
                    card0.setDir(); //revert to original image
                    repaint();
                }
            }
            else if(((x >= 160) && (x <= (59 + 160))) && ((y >= 80) && (y <= (85 + 80))))
            {
                if(!bcard1)//select card to replace
                {
                    bcard1=true;
                    card1.newpic("Back05v4.png");
                    repaint();
                }
                else if(bcard1)//unselects (incase user changes their mind)
                {
                    bcard1= false;
                    card1.setDir(); //revert to original image
                    repaint();
                }
            }
            else if(((x >= 240) && (x <= (59 + 240))) && ((y >= 80) && (y <= (85 + 80))))
            {
                if(!bcard2)//select card to replace
                {
                    bcard2=true;
                    card2.newpic("Back05v4.png");
                    repaint();
                }
                else if(bcard2)//unselects (incase user changes their mind)
                {
                    bcard2= false;
                    card2.setDir(); //revert to original image
                    repaint();
                }

            }
            else if(((x >= 320) && (x <= (59 + 320))) && ((y >= 80) && (y <= (85 + 80))))
            {
                if(!bcard3)//select card to replace
                {
                    bcard3=true;
                    card3.newpic("Back05v4.png");
                    repaint();
                }
                else if(bcard3)//unselects (incase user changes their mind)
                {
                    bcard3= false;
                    card3.setDir(); //revert to original image
                    repaint();
                }

            }
            else if(((x >= 400) && (x <= (59 + 400))) && ((y >= 80) && (y <= (85 + 80))))
            {
                if(!bcard4)//select card to replace
                {
                    bcard4=true;
                    card4.newpic("Back05v4.png");
                    repaint();
                }
                else if(bcard4)//unselects (incase user changes their mind)
                {
                    bcard4= false;
                    card4.setDir(); //revert to original image
                    repaint();
                }

            }



        }
    }//GEN-LAST:event_formMouseClicked



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

}

class mypic
{

    private String[] clubs = { "Card0jCa.png", "Card0jC2.png", "Card0jC3.png", "Card0jC4.png",
    "Card0jC5.png", "Card0jC6.png", "Card0jC7.png", "Card0jC8.png", 
    "Card0jC9.png",  "Card0jCt.png", "Card0jCj.png",
      "Card0jCq.png", "Card0jCk.png"};

     private String[] diamonds = {"Card0jDa.png",
     "Card0jD2.png", "Card0jD3.png", "Card0jD4.png", "Card0jD5.png",
     "Card0jD6.png", "Card0jD7.png", "Card0jD8.png", "Card0jD9.png",
     "Card0jDt.png", "Card0jDj.png", "Card0jDq.png", "Card0jDk.png"};

     private String[] hearts = {"Card0jHa.png",
     "Card0jH2.png", "Card0jH3.png", "Card0jH4.png","Card0jH5.png",
     "Card0jH6.png", "Card0jH7.png", "Card0jH8.png", "Card0jH9.png",
     "Card0jHt.png", "Card0jHj.png",  "Card0jHq.png", "Card0jHk.png"};

     private String[] spades = {"Card0jSa.png",
     "Card0jS2.png", "Card0jS3.png", "Card0jS4.png", "Card0jS5.png",
     "Card0jS6.png", "Card0jS7.png", "Card0jS8.png", "Card0jS9.png",
     "Card0jSt.png", "Card0jSj.png",  "Card0jSq.png", "Card0jSk.png"};



    File f = new File("Back05v4.png");
     
    public BufferedImage img; //= ImageIO.read(f);
    String Suite;
    int Rank;


    mypic()
    {

     try {
            img = ImageIO.read(f);

        }
     catch (IOException e) {
            System.exit(1);
        }
    }

    void newpic(String src)
    {
        File x= new File(src);

        try {
            img= ImageIO.read(x);

        }
     catch (IOException e) {
            System.exit(1);
        }

        //img= ImageIO.read();
    }

    //assigns the respective directory to the BufferImage var
    public void setDir()
    {
        if(Suite.equals("Clubs"))
        {
            newpic(clubs[Rank]);
        }
        else if(Suite.equals("Diamonds"))
        {
            newpic(diamonds[Rank]);
        }
        else if(Suite.equals("Hearts"))
        {
            newpic(hearts[Rank]);
        }
        else if(Suite.equals("Spades"))
        {
            newpic(spades[Rank]);
        }
    }

}

